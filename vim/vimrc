"
"  mkdir -p ~/.vim/autoload
"  curl -fLo ~/.vim/autoload/plug.vim \
"https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
"
au! BufNewFile,BufReadPost *.{yaml,yml} set filetype=yaml foldmethod=manual
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab


set encoding=utf-8



call plug#begin()
Plug 'scrooloose/syntastic'
let g:syntastic_yaml_checkers = ['yamllint']
"node.js and javascript
" make sure you have jshint installed: npm install -g jshint
Plug 'moll/vim-node'
Plug 'pangloss/vim-javascript'
Plug 'wookiehangover/jshint.vim'
" Additionally, after installing tern_for_vim, go to the plugin
" directory and run 'npm install'
Plug 'marijnh/tern_for_vim'
" Python
Plug 'nvie/vim-flake8'
" Puppet
Plug 'rodjek/vim-puppet'
" arduino syntax
Plug '4Evergreen4/vim-hardy'
" vim-go plugin for golang
" once installed, run :GoInstallBinaries and it'll install various go binaries
Plug 'fatih/vim-go'
"
" plugin for arduino-ino
" install 'ino' first!
Plug 'jplaut/vim-arduino-ino' 
" Basic usage:
" <Leader>ac - Compile the current sketch.
" <Leader>ad - Compile and deploy the current sketch.
" <Leader>as - Open a serial port in screen.

" other vim stuff
Plug 'tpope/vim-surround'
Plug 'lokaltog/vim-easymotion'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-sensible'
Plug 'ervandew/supertab'
" For easy Hex editing
Plug 'fidian/hexmode'
Plug 'scrooloose/nerdtree'
Plug 'elzr/vim-json'
Plug 'keith/tmux.vim' 
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'bling/vim-airline' 
Plug 'altercation/vim-colors-solarized'
Plug 'nightsense/stellarized'
Plug 'dracula/vim'
" YCM needs it's installer to be called as well
Plug 'Valloric/YouCompleteMe', { 'do': './install.sh' }
" on FreeBSD, make sure you have clang36 (or clang36) and cmake installed
" in order to build YCM libraries
" check the YCM Readme for details, but essentially:
" pkg install llvm35 boost-all boost-python-libs clang35
" export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/llvm35/lib/
" ./install.sh --clang-completer --system-libclang --system-boost
"
" If you are getting some python exceptions, check if python supports SSL
" I have seen errors when python is built with LibreSSL
call plug#end()

"
" additionally for syntax checking/linting install:
" python:
"   * flake8 
"     install it in order to use vim-flake8
"     for example: pip install flake8
"     flake8 can then be invoked by 'F7' 
"
"   * pylint 
"     could also be used and is more strict
"
" bash:
"   * shellcheck
"     install shellcheck package
"   
" if you want to display airline tabline
" then uncomment the next line
" let g:airline#extensions#tabline#enabled = 1
"
"
"Open nerdtree by default if new empty vim is opened
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif


let g:ycm_autoclose_preview_window_after_completion = 1

set nocompatible 
syntax enable
set showmode " always show mode
set hlsearch

" for colors, see this awesome color table
" https://github.com/guns/xterm-color-table.vim

" use solarized colorscheme on my mac
" use dracula everywhere else
" another option I really like is stellarized light version
if has('mac')
set background=dark
let g:solarized_termcolors=256
colorscheme solarized
else
set termguicolors
colorscheme dracula
endif

hi Search ctermfg=31 ctermbg=157
highlight OverLength ctermbg=red ctermfg=white
" Color column can be annoying so I use OverLenght highlight instead
"set colorcolumn=81
"highlight ColorColumn ctermbg=DarkGray

set backspace =2
set visualbell
"max line length should be no more than 80 characters
"highlight the 80th character and draw a vertical line
"at 81st character
match OverLength /\%80v.\+/

set cursorline
set smartindent

" smartindent does nothing useful for python 
" also commented out lines don't get indented
" so the solution is to disable autoindenting for python scripts
au! FileType python setl nosmartindent

set number
set ruler
set showmatch
set expandtab
set smarttab autoindent
set tabstop=4 
set shiftwidth=4 
set softtabstop=4 
set shiftround 

" keyboard shortcuts
nnoremap <F5> :set invpaste paste?<Enter>
imap <F5> <C-O><F5>
set pastetoggle=<F5>

highlight Comment ctermfg=gray guifg=gray
"make ctrl+c ctrl+v work in gvim
nmap <C-V> "+gP
imap <C-V> <ESC><C-V>i
vmap <C-C> "+y 

map <C-n> :NERDTreeToggle<CR>
map <C-f> :NERDTreeFind<CR>

" custom commands
" run ./test.sh
command T !./test.sh
" run pylint on the current file
command L ! pylint ./%
" execute the script
command R !./%
" execute as a python script
command P ! python ./%
" validate puppet manifest
" remap ; to : to avoid typing SHIFT + ; 
nnoremap ; :
" map space to center screen on current line
nmap <space> zz


" indenting for YAML
filetype plugin indent on
autocmd FileType yaml setl indentkeys-=<:>
autocmd FileType yaml setl shiftwidth=2
autocmd FileType yaml setl tabstop=2
set background=dark
set term=xterm-256color
colo solarized
